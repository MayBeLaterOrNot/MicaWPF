<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:MicaWPF.Controls"
    xmlns:helpers="clr-namespace:MicaWPF.Converters">

    <helpers:IconNotEmptyConverter x:Key="IconNotEmptyConverter" />
    <helpers:TextToAsteriskConverter x:Key="TextToAsteriskConverter" />
    <helpers:NullConverter x:Key="NullConverter" />

    <ContextMenu x:Key="MicaPasswordBoxContextMenu">
        <MenuItem Command="ApplicationCommands.Paste" />
    </ContextMenu>

    <Style TargetType="{x:Type controls:MicaPasswordBox}">
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource MicaWPF.Colors.TextFillColorPrimary}" />
            </Setter.Value>
        </Setter>
        <Setter Property="IconForeground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource MicaWPF.Colors.TextFillColorTertiary}" />
            </Setter.Value>
        </Setter>
        <Setter Property="CaretBrush">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource MicaWPF.Colors.TextFillColorPrimary}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource MicaWPF.Colors.ControlFillColorDefault}" />
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource MicaWPF.GradientBrushes.ControlElevationBorderBrush}" />
        <Setter Property="ContextMenu" Value="{StaticResource MicaPasswordBoxContextMenu}" />
        <Setter Property="MinHeight" Value="34" />
        <Setter Property="Padding" Value="6,4" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:MicaPasswordBox}">
                    <Border
                        x:Name="MainBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1,1,1,0"
                        CornerRadius="4">
                        <Border
                            x:Name="BottomBorder"
                            Padding="2"
                            BorderThickness="0,0,0,2"
                            CornerRadius="4">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource MicaWPF.Colors.ControlStrokeColorSecondary}" />
                            </Border.BorderBrush>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <Grid Grid.Column="0">
                                    <controls:MicaSymbolIcon
                                        x:Name="IconLeft"
                                        Margin="6,0,2,0"
                                        Filled="{TemplateBinding IconFilled}"
                                        Foreground="{TemplateBinding IconForeground}"
                                        Symbol="{TemplateBinding Icon}"
                                        Visibility="Collapsed" />
                                </Grid>

                                <Grid Grid.Column="1">
                                    <Decorator
                                        x:Name="PART_ContentHost"
                                        Margin="0"
                                        VerticalAlignment="Center" />

                                    <!--  Watermark  -->
                                </Grid>

                                <Grid Grid.Column="2">
                                    <controls:MicaButton
                                        x:Name="RevealButton"
                                        Width="25"
                                        Margin="2,0,0,0"
                                        Padding="0,5"
                                        Background="Transparent"
                                        BorderBrush="Transparent"
                                        Visibility="Collapsed">
                                        <controls:MicaButton.Foreground>
                                            <SolidColorBrush Color="{DynamicResource MicaWPF.Colors.TextFillColorTertiary}" />
                                        </controls:MicaButton.Foreground>
                                        <controls:MicaSymbolIcon
                                            x:Name="IconRight"
                                            Margin="2,0,6,0"
                                            Filled="{TemplateBinding IconFilled}"
                                            Foreground="{TemplateBinding IconForeground}"
                                            Symbol="{TemplateBinding Icon}"
                                            Visibility="Collapsed" />
                                    </controls:MicaButton>
                                </Grid>


                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=RevealButton, Path=IsPressed}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="PasswordRevealMode" Value="Visible" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Text, Converter={StaticResource NullConverter}}" Value="" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="RevealButton" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>
                        <Trigger Property="PasswordRevealMode" Value="Visible">
                            <Setter TargetName="RevealButton" Property="Icon" Value="EyeOff24" />
                            <Setter TargetName="RevealButton" Property="Foreground">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource MicaWPF.Colors.TextFillColorPrimary}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="ShowRevealButton" Value="False">
                            <Setter TargetName="RevealButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="RevealButton" Property="Margin" Value="0" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="BottomBorder" Property="BorderBrush">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource MicaWPF.Colors.SystemAccentColorLight2}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=Icon, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource IconNotEmptyConverter}}" Value="True" />
                                <Condition Binding="{Binding Path=IconPosition, RelativeSource={RelativeSource Self}, Mode=OneWay}" Value="Left" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="IconLeft" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=Icon, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource IconNotEmptyConverter}}" Value="True" />
                                <Condition Binding="{Binding Path=IconPosition, RelativeSource={RelativeSource Self}, Mode=OneWay}" Value="Right" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="IconRight" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>